# Generated by Django 5.2 on 2025-05-03 01:58

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Debate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('statement', models.CharField(max_length=200)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='RandomTournament', max_length=255)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('registration_deadline', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('rank', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('debate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.debate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.userprofile')),
            ],
            options={
                'unique_together': {('user', 'debate')},
            },
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('debate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.debate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.userprofile')),
            ],
            options={
                'unique_together': {('user', 'debate')},
            },
        ),
        migrations.AddField(
            model_name='debate',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.tournament'),
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('feedback', models.TextField(blank=True)),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.competitor')),
                ('debate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.debate')),
                ('judge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.judge')),
            ],
            options={
                'unique_together': {('competitor', 'judge', 'debate')},
            },
        ),
    ]
